/*
 * logger.js: Plugin for `Monitor` instances which adds stdout and stderr logging.
 *
 * (C) 2010 Charlie Robbins & the Contributors
 * MIT LICENCE
 *
 */

var fs = require('fs');
const path = require('path');
const Transform = require('stream').Transform;

//
// ### function attach (options)
// #### @options {Object} Options for attaching to `Monitor`
// Attaches functionality for logging stdout and stderr to `Monitor` instances.
exports.attach = function (options) {

  var monitor = this;
  options = options || {};

  monitor.on('start', startLogs);
  monitor.on('restart', startLogs);
  monitor.on('exit', stopLogs);

  function stopLogs() {
    if (monitor.child.stdout && options.outLogger) {
      // Remark: 0.8.x doesnt have an unpipe method
      monitor.child.stdout.unpipe && monitor.child.stdout.unpipe(options.outLogger);
    }
    // Remark: 0.8.x doesnt have an unpipe method
    if (monitor.child.stderr && options.errLogger) {
      monitor.child.stderr.unpipe && monitor.child.stderr.unpipe(options.errLogger);
    }
  }

  function startLogs(child, childData) {
    if (monitor.child) {
      if (!options.silent) {
        process.stdout.setMaxListeners(0);
        process.stderr.setMaxListeners(0);
        monitor.child.stdout.pipe(process.stdout, { end: false });
        monitor.child.stderr.pipe(process.stderr, { end: false });
      }
      if (options.outLogger) {
        monitor.child.stdout.pipe(options.outLogger);
      }
      if (options.errLogger) {
        monitor.child.stderr.pipe(options.errLogger);
      }
    }
  }
};


